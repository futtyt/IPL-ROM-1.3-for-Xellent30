--- base/IPLROM30Xel.DAT.s	Tue Mar  2 23:05:37 2021
+++ 0.0.2/IPLROM30Xel.DAT.s	Thu Mar  4 20:51:12 2021
@@ -8227,10 +8227,12 @@
 	.dc.l	$00ff9340,$00000000
 	.dc.l	$00000000,$203c1392
 	.dc.l	$11274e75
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
 Lff0038:
 	move.w	#$2700,sr
-	lea.l	($2000),a7
-	reset
+; ソフトウェアリセットの判定をXellent30用起動処理の中で利用するため、先に実行しておく。
 	moveq.l	#$00,d5
 	cmp.l	(Lff1af6,pc),d0
 	bne	Lff0052
@@ -8238,6 +8240,12 @@
 	bne	Lff0052
 	moveq.l	#$ff,d5
 Lff0052:
+; Xellent30用起動処理へ
+	jmp	(LXellent30_Boot_Begin)
+; 終わったらここに戻る。
+LXellent30_Boot_End:
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+
 	move.l	($0030),d6
 	lsl.l	#8,d6
 	lsr.l	#8,d6
@@ -8355,7 +8363,7 @@
 	move.w	#$2000,sr
 	bsr	Lff05be
 	move.b	($00ed0028),($00e8e001)
-	clr.b	($00e86001)
+	move.b	#$0,(-$3FFF,a0)				; MC68000でのバスエラーを回避する。
 	move.b	#$04,($00e8a01f)
 	tst.b	($00e9a001)
 	tst.b	($00e9a001)
@@ -8487,9 +8495,14 @@
 	bls	Lff0386
 	btst.b	#$06,($000a,a1)
 	bne	Lff037a
-	btst.b	#$05,($000a,a1)
-	beq	Lff0386
-	lsr.w	#8,d0
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+;/_/_/  電源オン、またはリセットボタン押下と同時にXF1キーを押下していた場合の処理
+	jsr	LCheckXF1Key
+; MC68000モードに移行しなかった場合しかここには戻ってこないため、無条件でジャンプする。
+	bra	Lff0386
+	nop						; サイズ調整
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+
 Lff037a:
 	move.b	d0,($00e8e009)
 	moveq.l	#$00,d0
@@ -9240,7 +9253,7 @@
 	suba.l	d0,a0
 	cmpa.w	#$0006,a0
 	beq	Lff0e00
-	moveq.l	#$10,d1
+	moveq.l	#$1,d1					; たぶんMC68010の判定間違い
 	bra	Lff0e00
 Lff0e30:
 	nop
@@ -26041,8 +26054,180 @@
 	nop
 	jmp	(a0)
 
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+	.DCB.B	946*2,$FF				;030SYSpatch用の予約領域
+
+LXellent30_Boot_Begin:
+	tst.b	d5
+	bne	LXellent30_Change_MPU_Entry		; ソフトウェアリセットの場合はCPUを切替えない。
+	move.b	#3,($cbc)				; MC68030をデフォルトにする。
+
+LXellent30_Change_MPU_Entry:
+	lea.l	($2000),sp
+
+	bsr	LGetXellent30_IO
+	tst.w	d2
+	bpl	LXellent30_Boot				;Xellent30のI/Oアドレスが見つかった場合は専用Boot処理へ。
+
+	RESET
+	bra	LXellent30_Boot_Exit
+
+LXellent30_Boot:
+	bsr	LCheckMpu
+	tst.b	d0
+	beq	LReset_Entry				;d0(0:MC68000、1:MC68030)動作中のMPUがMC68000であれば、ここでは切替え不要。
+
+	moveq.l	#$0,d1					;ソフトウェアリセットの場合はMC68030のままここに来る。
+	bsr	LChange_MPU				;RESET時の動作MPUはMC68000である必要があるため、ここでMPUをMC68000に切替える。
+
+LReset_Entry:
+	RESET
+
+	cmpi.b	#1,($cbc)
+	bls	LBoot000
+
+LBoot030:
+	moveq.l	#$4,d1
+	bsr	LChange_MPU				;MPUをMC68030に切替える。
+	bra	LInitializeSRAM_Entry
+
+LBoot000:
+	moveq.l	#$0,d1
+
+LInitializeSRAM_Entry:
+	bsr	LInitializeSRAM				;Xellent30のSRAMを初期化する。
+
+LXellent30_Boot_Exit:
+	jmp	LXellent30_Boot_End
+
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+
+;*****************************************************************************
+;******* MPU判定
+;******* IN  なし
+;******* OUT d0 判定結果(0:MC68000、1:MC68030)
+;******* USE なし
+LCheckMpu:
+	moveq.l #1,d0
+	.CPU 68020
+	and.b	((*)-3,pc,d0.w*2),d0
+	.CPU 68000
+	rts
+;*****************************************************************************
+
+;*****************************************************************************
+;******* MPU切替え
+;******* IN  a0 Xellent30のI/Oアドレス、d1 切替え先のMPU種別($0000:MC68000、$0004:MC68030)
+;******* OUT なし
+;******* USE すべてのレジスタを元に戻す
+LChange_MPU:
+	move.w	sr,-(sp)
+	movem.l	d0-d7/a0-a6,-(sp)
+	lea.l	(LChange_MPU_ReEntry,pc),a1
+	move.l	a1,($00000004)
+	move.l	sp,($00000000)
+	move.w	d1,(a0)
+	nop
+	nop
+	nop
+	nop						; MC68000へ戻す時はこの辺りから再開する。
+	nop
+	nop
+	nop
+
+LChange_MPU_ReEntry:
+	move.w	#$2700,sr
+	move.l	$0,sp
+	move.l	($ff0004),($4)
+	move.l	($ff0000),($0)
+	movem.l	(sp)+,d0-d7/a0-a6
+
+LChange_MPU_Exit:
+	move.w	(sp)+,sr
+	rts
+;*****************************************************************************
+
+;*****************************************************************************
+;******* Xellent30のI/Oアドレスを取得する。
+;******* IN なし
+;******* OUT a0 Xellent30のI/Oアドレス、d2 取得結果($00000000:成功、$ffffffff:失敗)
+;******* USE d3
+LGetXellent30_IO:
+	lea.l	$ec0000,a0
+	moveq.l	#3,d3
+@@:							;A0レジスタ:Xellent30 I/Oアドレス
+	bsr	LCheckIO
+	tst.b	d2
+	beq	@f
+	adda.w	#$4000,a0
+	dbra	d3,@b
+@@:
+	rts
+;*****************************************************************************
+
+;*****************************************************************************
+;******* 指定されたI/Oアドレスが読込み可能かチェックする。
+;******* IN  a0 チェック対象のI/Oアドレス
+;******* OUT d2 チェック結果($00000000:読込み可、$ffffffff:不可)
+;******* USE a1,a2,a6 破壊
+LCheckIO:
+	movea.l	sp,a6
+	movea.l	$0008,a2				;バスエラーの例外ハンドラを退避しておく。
+	lea.l	LCheckIO_BusError(pc),a1		;バスエラーをフックする。
+	move.l	a1,$0008
+	tst.w	(a0)					;読込み不可なら、ここでバスエラー
+	move.l	a2,$0008				;バスエラーの例外ハンドラを元に戻す。
+	moveq.l	#0,d2
+	rts
+
+LCheckIO_BusError:
+	movea.l	a6,sp
+	move.l	a2,$0008
+	moveq.l	#$ff,d2
+	rts
+;*****************************************************************************
+
+;*****************************************************************************
+;******* 拡張SRAM($00ffc0000)初期化、IPL-ROMコピー
+;******* IN  a0 Xellent30のI/Oアドレス、d1 切替え先のMPU種別($0000:MC68000、$0004:MC68030)
+;******* OUT なし
+LInitializeSRAM:
+	movem.l	d0-d7/a0-a6,-(a7)
+	or.b	#$2,d1
+	move.w	d1,(a0)
+	lea.l	$bc0000,a1
+	lea.l	$fc0000,a2
+	moveq.l	#$ff,d2
+@@:
+	move.l	(a2)+,(a1)+
+	dbra	d2,@b
+	or.b	#$1,d1
+	move.w	d1,(a0)
+	movem.l	(a7)+,d0-d7/a0-a6
+	rts
+;*****************************************************************************
+
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+;/_/_/  電源オン、またはリセットボタン押下と同時にXF1キーを押下していた場合は
+;/_/_/  MPUをMC68000へ切替える。
+;/_/_/  IN  なし
+;/_/_/  OUT なし
+LCheckXF1Key:
+	BTST.B	#$5,($80A)				; XF1キーが
+	bne	@f					; 押下されていれば@fへジャンプする。
+	rts						; 押下されていなければ呼出し元に戻る。
+
+@@:
+	move.b	#0,($cbc)				; IOCSワークのMPU 種別を 0(68000)にする。
+	move.w	#$2700,sr
+	bra	LXellent30_Change_MPU_Entry		; MPU変更へ
+;/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
+
 Lffed6e:
-	.dcb.b	4753,$ff
+;	.dcb.b	4753,$ff
+	.dcb.b	4753-1892-130*2,$ff
 Lffffff:
 	.dc.b	$ff
 L000000:
